{
  "name": "stepfunctions",
  "version": "1.0.0",
  "description": "GPT stepfunctions",
  "main": "index.js",
  "type": "commonjs",
  "schematics": "./schematics/src/collection.json",
  "dependencies": {
    "@aws-sdk/client-dynamodb": "3.347.1",
    "@aws-sdk/client-lambda": "^3.386.0",
    "@aws-sdk/client-sfn": "^3.385.0",
    "@aws-sdk/client-sns": "3.382.0",
    "@aws-sdk/client-sqs": "3.388.0",
    "@aws-sdk/lib-dynamodb": "3.347.1",
    "@inquirer/prompts": "^3.0.2",
    "@pinecone-database/pinecone": "^0.1.6",
    "googleapis": "^118.0.0",
    "lodash": "^4.17.21",
    "prettier": "^2.8.8",
    "serverless-dynamodb-client": "^0.0.2",
    "serverless-dynamodb-local": "^0.2.40",
    "serverless-offline-sns": "0.72.0",
    "serverless-step-functions": "^3.13.1"
  },
  "devDependencies": {
    "@angular-devkit/schematics": "^16.1.5",
    "@angular-devkit/schematics-cli": "^16.1.5",
    "@serverless/typescript": "^3.30.1",
    "@trivago/prettier-plugin-sort-imports": "^4.2.0",
    "@types/aws-lambda": "^8.10.71",
    "@types/jest": "^29.5.3",
    "@types/node": "^18.15.3",
    "aws-sdk": "^2.1431.0",
    "chalk": "^4.1.2",
    "cross-env": "^7.0.3",
    "cross-var": "^1.1.0",
    "dotenv": "^16.3.1",
    "dotenv-cli": "^7.2.1",
    "esbuild": "^0.14.11",
    "handlebars": "^4.7.7",
    "jest": "^29.6.1",
    "js-yaml": "^4.1.0",
    "json-schema-to-ts": "^1.5.0",
    "serverless": "^3.0.0",
    "serverless-esbuild": "^1.23.3",
    "serverless-offline": "^12.0.4",
    "serverless-offline-lambda": "^1.0.6",
    "serverless-offline-sqs": "^7.3.2",
    "serverless-step-functions-local": "^0.5.0",
    "ts-jest": "^29.1.1",
    "ts-morph": "19.0.0",
    "ts-node": "^10.9.1",
    "tsconfig-paths": "^4.2.0",
    "typescript": "^5.1.6",
    "uuid": "^9.0.1"
  },
  "scripts": {
    "ddbSeed:prepare": "ts-node -T scripts/prepareDdbSeedFiles.ts",
    "postinstall": "npm run cfn:gettypes",
    "test:lib": "dotenv -- cross-env PROJECT_NAME=stepfunctions STAGE=offline ACCOUNT_ID=%OFFLINE_ACCOUNT_ID% jest --config=jest.libs.config.ts",
    "test": "cross-env PROJECT_NAME=stepfunctions STAGE=offline jest --config=jest.user.config.ts",
    "start-sf-local-docker": "dotenv -- cross-var docker-compose up -d --force-recreate",
    "start-serverless-offline": "dotenv -- cross-env STAGE=offline cross-var serverless offline start --stage offline --reloadHandler --httpPort 1337 --lambdaPort %OFFLINE_LAMBDA_PORT% --host %OFFLINE_HOST% --region %OFFLINE_REGION%",
    "sm:test:setup": "npm run ddbSeed:prepare && npm run start-sf-local-docker && npm run start-serverless-offline",
    "start-serverless-offline-with-env": "cross-env-shell \"serverless offline start --stage offline --reloadHandler --httpPort 1337 --lambdaPort $OFFLINE_LAMBDA_PORT --host $OFFLINE_HOST --region $REGION\"",
    "sm:test:unit": "cross-env STAGE=offline ts-node -T scripts/testScripts/runner.unit.ts",
    "sm:test:unit:one": "cross-env STAGE=offline ts-node -T scripts/selectAndRunStateMachineTestUnit.ts",
    "sm:test:e2e": "cross-env STAGE=offline ts-node -T scripts/testScripts/runner.e2e.ts",
    "sm:test:e2e:one": "cross-env STAGE=offline ts-node -T scripts/selectAndRunStateMachineTestE2E.ts",
    "sm:dev:one": "ts-node -T scripts/selectAndRunStateMachineDev.ts",
    "sm:dev:one:cmd": "ts-node -T scripts/printSmDevCliCmds.ts",
    "generate:setup": "cd ./schematics && npm install && npm run build && cd ../",
    "generate": "npm run generate:stateMachineNames && node ./schematics/generate-helper.js",
    "generate:stateMachineNames": "ts-node -T scripts/printStateMachineNamesForSchematics.ts",
    "lambda:offline": "ts-node -T ./scripts/lambdaSelect.ts",
    "lambda:cmd": "ts-node -T scripts/printLambdaCliCmds.ts",
    "print:yaml": "ts-node -T scripts/toYaml.ts",
    "cfn:download": "curl --compressed https://d1uauaxba7bl26.cloudfront.net/latest/gzip/CloudFormationResourceSpecification.json -o libs/aws/types/cfn/spec.json",
    "cfn:generate": "ts-node -T libs/aws/types/cfn/generate.ts",
    "cfn:gettypes": "npm run cfn:download && npm run cfn:generate",
    "format": "prettier --write"
  },
  "keywords": [],
  "author": "",
  "license": "ISC",
  "volta": {
    "node": "18.15.0",
    "npm": "9.5.0"
  }
}
